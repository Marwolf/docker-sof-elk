# Author Ross Petty
# Date 10/19/15
# Rev 1
filter {
  if [type] == "fortinet" {
    mutate {
      gsub => [ "message", "= ", "=NA " ]
    }

    grok {
       match => ["message", "type=%{DATA:event_type}\s+"]
       tag_on_failure => []
    }
    grok {
       match => ["message", "<%{DATA}>%{GREEDYDATA:kv}"]
       tag_on_failure => []
    }
    kv {
      source => "kv"
      exclude_keys => [ "type" ]
    }
    mutate {
      gsub => [ "log", "= ", "=NA " ]
    }
    kv {
      source => "log"
      target => "SubLog"
    }
    grok {
       match => ["message", "custom: DOM-ALL, dns_query=%{DATA:dns_query};"]
       tag_on_failure => [ "" ]
    }
    mutate {
      rename => {
        "action" => "action"
        "addr" => "addr_ip"
        "age" => "age"
        "assigned" => "assigned_ip"
        "assignip" => "assign_ip"
        "ap" => "access_point"
        "app" => "application"
        "appcat" => "application_category"
        "applist" => "application_list"
        "apprisk" => "application_risk"
        "approfile" => "accessPoint_profile"
        "apscan" => "access_point_scan"
        "apstatus" => "acces_point_status"
        "aptype" => "access_point_type"
        "authproto" => "authentication_protocol"
        "bandwidth" => "bandwidth"
        "banned_src" => "banned_source"
        "cat" => "category"
        "catdesc" => "category_description"
        "cfgattr" => "configuration_attribute"
        "cfgobj" => "configuration_object"
        "cfgpath" => "configuration_path"
        "cfgtid" => "configuration_transaction_id"
        "channel" => "channel"
        "community" => "community"
        "cookies" => "cookies"
        "craction" => "cr_action"
        "crlevel" => "cr_level"
        "crscore" => "cr_score"
        "datarange" => "data_range"
        "desc" => "description"
        "detectionmethod" => "detection_method"
        "devid" => "device_id"
        "devname" => "device_name"
        "devtype" => "device_type"
        "dhcp_msg" => "dhcp_message"
        "disklograte" => "disk_lograte"
        "dstcountry" => "destination_country"
        "dstintf" => "destination_interface"
        "dstip" => "destination_ip"
        "dstport" => "destination_port"
        "duration" => "elapsed_time"
        "error_num" => "error_number"
        "espauth" => "esp_authentication"
        "esptransform" => "esp_transform"
        "eventid" => "event_id"
        "eventtype" => "event_type"
        "fazlograte" => "faz_lograte"
        "filename" => "file_name"
        "filesize" => "file_size"
        "filetype" => "file_type"
        "hostname" => "hostname"
        "ip" => "source_ip"
        "localip" => "source_ip"
        "locip" => "local_ip"
        "locport" => "source_port"
        "logid" => "log_id"
        "logver" => "log_version"
        "manuf" => "manufacturer"
        "mem" => "memory"
        "meshmode" => "mesh_mode"
        "msg" => "message"
        "nextstat" => "next_stat"
        "onwire" => "on_wire"
        "osname" => "os_name"
        "osversion" => "unauthenticated_user"
        "outintf" => "outbound_interface"
        "peer_notif" => "peer_notification"
        "phase2_name" => "phase2_name"
        "policyid" => "policy_id"
        "policytype" => "policy_type"
        "port" => "port"
        "probeproto" => "probe_protocol"
        "proto" => "protocol_number"
        "radioband" => "radio_band"
        "radioidclosest" => "radio_id_closest"
        "radioiddetected" => "radio_id_detected"
        "rcvd" => "bytes_received"
        "rcvdbyte" => "bytes_received"
        "rcvdpkt" => "packets_received"
        "remip" => "destination_ip"
        "remport" => "remote_port"
        "reqtype" => "request_type"
        "scantime" => "scan_time"
        "securitymode" => "security_mode"
        "sent" => "bytes_sent"
        "sentbyte" => "bytes_sent"
        "sentpkt" => "packets_sent"
        "session_id" => "session_id"
        "setuprate" => "setup_rate"
        "sn" => "serial"
        "snclosest" => "serial_closest_access_point"
        "sndetected" => "serial_access_point_that_detected_rogue_ap"
        "snmeshparent" => "serial_mesh_parent"
        "srccountry" => "source_country"
        "srcname" => "source_name"
        "stacount" => "station_count"
        "stamac" => "static_mac"
        "srcip" => "source_ip"
        "srcmac" => "source_mac"
        "srcintf" => "source_interface"
        "srcport" => "source_port"
        "total" => "total_bytes"
        "totalsession" => "total_sessions"
        "trandisp" => "nat_translation_type"
        "tranip" => "nat_destination_ip"
        "tranport" => "nat_destination_port"
        "transip" => "nat_source_ip"
        "transport" => "nat_source_port"
        "tunnelid" => "tunnel_id"
        "tunnelip" => "tunnel_ip"
        "tunneltype" => "tunnel_type"
        "unauthuser" => "unauthenticated_user_source"
        "unauthusersource" => "os_version"
        "vendorurl" => "vendor_url"
        "vpntunnel" => "vpn_tunnel"
        "vulncat" => "vulnerability_category"
        "vulncmt" => "vulnerability_count"
        "vulnid" => "vulnerability_id"
        "vulnname" => "vulnerability_name"
        "vulnref" => "vulnerability_reference"
        "vulnscore" => "vulnerability_score"
        "xauthgroup" => "x_authentication_group"
        "xauthuser" => "x_authentication_user"
        "[SubLog][appid]" => "sub_application_id"
        "[SubLog][devid]" => "sub_device_id"
        "[SubLog][dstip]" => "sub_destination_ip"
        "[SubLog][srcip]" => "sub_source_ip"
        "[SubLog][dstport]" => "sub_destination_port"
        "[SubLog][eventtype]" => "sub_event_type"
        "[SubLog][proto]" => "sub_protocol_number"
        "[SubLog][date]" => "sub_date"
        "[SubLog][time]" => "sub_time"
        "[SubLog][srcport]" => "sub_source_port"
        "[SubLog][subtype]" => "sub_subtype"
        "[SubLog][devname]" => "sub_device_name"
        "[SubLog][itime]" => "sub_itime"
        "[SubLog][level]" => "sub_level"
        "[SubLog][logid]" => "sub_log_id"
        "[SubLog][logver]" => "sub_log_version"
        "[SubLog][type]" => "sub_event_type"
        "[SubLog][vd]" => "sub_vd"
        "[SubLog][action]" => "sub_action"
        "[SubLog][logdesc]" => "sub_destination_ip"
        "[SubLog][policyid]" => "sub_olicy_id"
        "[SubLog][reason]" => "sub_reason"
        "[SubLog][service]" => "sub_service"
        "[SubLog][sessionid]" => "sub_session_id"
        "[SubLog][src]" => "sub_source_ip"
        "[SubLog][status]" => "sub_status"
        "[SubLog][ui]" => "sub_ui"
        "[SubLog][urlfilteridx]" => "sub_url_filter_idx"
      }
      strip => [ "bytes_sent", "bytes_received" ]
      convert => {
        "bytes_sent" => "integer"
        "bytes_received" => "integer"
        "cr_score" => "integer"
        "cr_action" => "integer"
        "elapsed_time" => "integer"
        "destination_port" => "integer"
        "source_port" => "integer"
        "local_port" => "integer"
        "remote_port" => "integer"
        "packets_sent" => "integer"
        "packets_received" => "integer"
        "port" => "integer"
        "ProtocolNumber" => "integer"
        "XAuthUser" => "string"
      }
      remove_field => [ "kv", "log" ]
    }
    if [tunnel_ip] == "N/A" {
      mutate {
        remove_field => [ "tunnel_ip" ]
      }
    }
    if [nat_destination_ip] {
      mutate {
        add_field => {
          "ips" => [ "%{nat_destination_ip}" ]
          "destination_ips" => [ "%{nat_destination_ip}" ]
        }
      }
    }
    if [sub_destination_ip] {
      mutate {
        add_field => {
          "ips" => [ "%{sub_destination_ip}" ]
          "destination_ips" => [ "%{sub_destination_ip}" ]
        }
      }
    }
    if [nat_source_ip] {
      mutate {
        add_field => {
          "ips" => [ "%{nat_source_ip}" ]
          "source_ips" => [ "%{nat_source_ip}" ]
        }
      }
    }
    if [sub_source_ip] {
      mutate {
        add_field => {
          "ips" => [ "%{sub_source_ip}" ]
          "source_ips" => [ "%{sub_source_ip}" ]
        }
      }
    }
    if [addr_ip] {
      mutate {
        add_field => { "ips" => [ "%{addr_ip}" ] }
      }
    }
    if [assign_ip] {
      mutate {
        add_field => { "ips" => [ "%{assign_ip}" ] }
      }
    }
    if [assigned_ip] {
      mutate {
        add_field => { "ips" => [ "%{assigned_ip}" ] }
      }
    }
    grok {
       match => ["message", "type=%{DATA:event_type}\s+"]
    }
    if [date] and [time] {
      mutate {
        add_field => { "receive_time" => "%{date} %{time}" }
        remove_field => [ "date", "time" ]
      }
      date {
        timezone => "America/Chicago"
        match => [ "receive_time", "YYYY-MM-dd HH:mm:ss" ]
        target => "receive_time"
      }
      mutate {
        rename => { "receive_time" => "@timestamp" }
      }
    } else {
      mutate {
        add_tag => [ "missing_date" ]
      }
    }
  }
}
