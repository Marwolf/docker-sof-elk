# SOF-ELKÂ® Configuration File
# (C)2021 Lewes Technology Consulting, LLC
#
# This file contains postprocessing for HTTPD access log messages

filter {
  if [type] == "httpdlog" or [type] == "zeek_http" {

    if [referrer] {
      mutate {
        # remove quotes from quoted string
        gsub => [
          "referrer", "\"", ""
        ]
      }
    }

    # enrich the useragent field
    if [useragent] {
      mutate {
        # remove quotes from quoted string
        # convert + sign to space
        gsub => [
          "useragent", "\"", "",
          "useragent", "\+", " "
        ]
      }
      useragent {
        source => [useragent]
        target => [useragentinfo]
      }
    }

    if [destination_bytes] == "-" {
      mutate {
        replace => { "destination_bytes" => 0 }
      }
    }
    if [object_size] == "-" {
      mutate {
        replace => { "object_size" => 0 }
      }
    }
    if [response_time] == "-" {
      mutate {
        replace  => { "response_time" => 0 }
      }
    }
    if [turnaround_time] == "-" {
      mutate {
        replace => { "turnaround_time" => 0 }
      }
    }
    mutate {
      convert => {
        "destination_bytes" => "integer"
        "object_size" => "integer"
        "response_time" => "integer"
        "turnaround_time" => "integer"
      }
    }

    # look at %{request} and see if it ends in a "not page resource" extension. Issue #25.
    if [request] {
      grok {
        patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
        match => [ "request", "%{URIPATH:requestpath}" ]
        add_tag => [ "find_pagenotpage" ]
      }
      if "find_pagenotpage" in [tags] {
        grok {
          match => [ "requestpath", "\.(css|js|class|gif|jpg|jpeg|png|bmp|ico|rss|xml|swf|woff2|ttf|eot)$" ]
          add_tag => [ "not_page" ]
          tag_on_failure => [ "page" ]
        }
        mutate {
          remove_field => [ "requestpath" ]
          remove_tag => [ "find_pagenotpage" ]
        }
      }
    }
  }
}
