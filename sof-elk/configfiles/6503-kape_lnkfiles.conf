# SOF-ELKÂ® Configuration File
# Author: Phil Hagen
# Email: phil@lewestech.com
#
# (C)2019 Lewes Technology Consulting, LLC
#
# This conf file accepts logs from the KAPE forensic tool

filter {
  if [type] == "kape_lnkfiles" and "json" not in [tags] {
    mutate {
      # create "origin" and "target" superfields
      # promote necessary fields from the [raw] placeholder
      # remove the [raw] placeholder
      rename => {
        "[raw][SourceCreated]" => "[origin][created]"
        "[raw][SourceModified]" => "[origin][modified]"
        "[raw][SourceAccessed]" => "[origin][accessed]"

        "[raw][TargetCreated]" => "[target][created]"
        "[raw][TargetModified]" => "[target][modified]"
        "[raw][TargetAccessed]" => "[target][accessed]"

        "[raw][SourceFile]" => "[origin][filename]"
        "[raw][MachineMACAddress]" => "[origin][machinemacaddress]"
        "[raw][MACVendor]" => "[origin][macvendor]"
        "[raw][TrackerCreatedOn]" => "[origin][trackercreatedon]"

        "[raw][FileSize]" => "[target][filesize]"
        "[raw][Arguments]" => "[target][arguments]"
        "[raw][WorkingDirectory]" => "[target][workingdirectory]"
        "[raw][DriveType]" => "[target][drivetype]"
        "[raw][VolumeSerialNumber]" => "[target][volumeserialnumber]"
        "[raw][VolumeLabel]" => "[target][volumelabel]"
        "[raw][LocalPath]" => "[target][localpath]"
        "[raw][NetworkPath]" => "[target][networkpath]"
        "[raw][CommonPath]" => "[target][commonpath]"
        "[raw][TargetIDAbsolutePath]" => "[target][absolutepath]"
        "[raw][TargetMFTEntryNumber]" => "[target][mftentrynumber]"
        "[raw][TargetMFTSequenceNumber]" => "[target][mftsequencenumber]"
        "[raw][MachineID]" => "[target][machineid]"
        "[raw][RelativePath]" => "[target][relativepath]"
      }
      remove_field => [ "raw" ]
    }

    # clean up known potentially empty fields
    if [target][created] == "" {
      mutate {
        remove_field => [ "[target][created]" ]
      }
    }
    if [target][modified] == "" {
      mutate {
        remove_field => [ "[target][modified]" ]
      }
    }
    if [target][accessed] == "" {
      mutate {
        remove_field => [ "[target][accessed]" ]
      }
    }

    # use the origin last modified time for @timestamp
    date {
      match => [ "[origin][modified]", "ISO8601" ]
    }

    # convert all timestamps to date/time types
    date {
      match => [ "[origin][created]", "ISO8601" ]
      target => "[origin][created]"
    }
    date {
      match => [ "[origin][modified]", "ISO8601" ]
      target => "[origin][modified]"
    }
    date {
      match => [ "[origin][accessed]", "ISO8601" ]
      target => "[origin][accessed]"
    }
    date {
      match => [ "[origin][trackercreatedon]", "ISO8601" ]
      target => "[origin][trackercreatedon]"
    }
    date {
      match => [ "[target][created]", "ISO8601" ]
      target => "[target][created]"
    }
    date {
      match => [ "[target][modified]", "ISO8601" ]
      target => "[target][modified]"
    }
    date {
      match => [ "[target][accessed]", "ISO8601" ]
      target => "[target][accessed]"
    }
  }
}